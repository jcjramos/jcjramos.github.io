<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Helm on Ramos on Software</title>
    <link>https://jcjramos.github.io/tags/helm/</link>
    <description>Recent content in Helm on Ramos on Software</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Jan 2019 13:23:10 +0100</lastBuildDate>
    
	<atom:link href="https://jcjramos.github.io/tags/helm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>More About Helm - Values</title>
      <link>https://jcjramos.github.io/posts/2019-01-04-more-about-helm-values/</link>
      <pubDate>Fri, 04 Jan 2019 13:23:10 +0100</pubDate>
      
      <guid>https://jcjramos.github.io/posts/2019-01-04-more-about-helm-values/</guid>
      <description>Manage deployments is a import concern when creating a microservices based application, given the typical huge number of services involved and the possible variations you need a way to keep complexity under control. Helm can be a usefull tool, besides been a very cool way to define dependencies ( see this previous post ), Helm introduces an interesting concept called values ( not quite original, but implemented in a nice way ).</description>
    </item>
    
    <item>
      <title>About Helm</title>
      <link>https://jcjramos.github.io/posts/2018-12-19-about-helm/</link>
      <pubDate>Wed, 19 Dec 2018 13:23:10 +0100</pubDate>
      
      <guid>https://jcjramos.github.io/posts/2018-12-19-about-helm/</guid>
      <description>Microservices are supposed to be small and dedicated, the issue when you move an application to a microservices based architecture is that you quickly get many of them. Dealing with each service individually becomes much easier as they get more “micro”, but deal with the whole bunch can be a nightmare. Look at the example bellow, in the 1st interaction of a typical application it became something like this :</description>
    </item>
    
  </channel>
</rss>